{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-reborn/./src/components/api.js","webpack://mesto-project-reborn/./src/components/cards.js","webpack://mesto-project-reborn/./src/components/modal.js","webpack://mesto-project-reborn/./src/components/validation.js","webpack://mesto-project-reborn/./src/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-11',\r\n  headers: {\r\n    authorization: '68f93b82-a9de-4acf-969d-0e65b718b8be',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nconst checkResponseStatus = (res) => {\r\n  if (res.ok) {\r\n\r\n    return res.json();\r\n\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const getCardsFromApi = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers\r\n  })\r\n    .then(checkResponseStatus)\r\n}\r\n\r\nexport const getUserData = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n    .then(checkResponseStatus)\r\n}\r\n\r\nexport const refreshUserData = (name, job) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: job\r\n    })\r\n  })\r\n    .then(checkResponseStatus)\r\n}\r\n\r\nexport const sendCardToApi = (card) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: card.name,\r\n      link: card.link\r\n    })\r\n  })\r\n    .then(checkResponseStatus)\r\n}\r\n\r\nexport const deleteCardFromApi = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(checkResponseStatus)\r\n}\r\n\r\nexport const refreshUserAvatar = (url) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: url\r\n    })\r\n  })\r\n    .then(checkResponseStatus)\r\n}\r\n\r\nexport const addLikeOnCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers,\r\n  })\r\n    .then(checkResponseStatus)\r\n}\r\n\r\nexport const deleteLikeOnCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers,\r\n  })\r\n    .then(checkResponseStatus)\r\n}\r\n\r\n\r\n","import { addLikeOnCard, deleteLikeOnCard } from \"./api\";\r\n\r\nexport const placesCardsList = document.querySelector('.places__list');\r\n\r\nexport const createCard = (cardItem, cardDeleteHandler, cardImageHandler, cardLikeHandler, userId) => {\r\n  const cardTemplate = document.getElementById('card-template').content;\r\n  const placesCardItem = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = placesCardItem.querySelector('.card__image');\r\n  const cardTitle = placesCardItem.querySelector('.card__title');\r\n  const cardLikeCount = placesCardItem.querySelector('.card__like-count')\r\n  const cardLikeButton = placesCardItem.querySelector('.card__like-button')\r\n  const cardDeleteButton = placesCardItem.querySelector('.card__delete-button')\r\n\r\n  placesCardItem.setAttribute('id', cardItem._id)\r\n  const cardId = placesCardItem.getAttribute('id')\r\n\r\n  cardDeleteButton.addEventListener('click', () => {\r\n    cardDeleteHandler(cardId)\r\n  });\r\n  cardImage.addEventListener('click', cardImageHandler);\r\n  cardLikeButton.addEventListener('click', cardLikeHandler);\r\n\r\n  cardImage.src = cardItem.link;\r\n  cardImage.alt = cardItem.name;\r\n  cardTitle.textContent = cardItem.name;\r\n  cardLikeCount.textContent = cardItem.likes.length\r\n  if (cardItem.owner._id !== userId) {\r\n    cardDeleteButton.remove()\r\n  }\r\n  if (cardItem.likes.some(item => item._id === userId)) {\r\n    cardLikeButton.classList.add('card__like-button_is-active')\r\n  }\r\n  return placesCardItem;\r\n};\r\n\r\nexport const toggleLikeCard = (evt) => {\r\n  const cardItem = evt.target.closest('.places__item')\r\n  const cardLikeButton = evt.target.closest('.card__like-button');\r\n  const cardLikeCount = cardItem.querySelector('.card__like-count')\r\n  const cardId = cardItem.id\r\n  const likeApiMethod = cardLikeButton.classList.contains('card__like-button_is-active') \r\n  ? deleteLikeOnCard : addLikeOnCard;\r\n  // console.log(likeApiMethod)\r\n\r\n  likeApiMethod(cardId)\r\n    .then((res) => {\r\n      cardLikeButton.classList.toggle('card__like-button_is-active');\r\n      cardLikeCount.textContent = res.likes.length;\r\n    })\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\n//   if (likeButton)\r\n//     if (likeButton.classList.contains('card__like-button_is-active')) {\r\n//       deleteLikeOnCard(cardId)\r\n//         .then((res) => {\r\n//           likeButton.classList.remove('card__like-button_is-active')\r\n//           likeCountElement.textContent = res.likes.length\r\n//         })\r\n//         .catch((err) => console.log(err))\r\n\r\n//     }\r\n//     else {\r\n//       addLikeOnCard(cardId)\r\n//         .then((res) => {\r\n//           likeButton.classList.add('card__like-button_is-active')\r\n//           likeCountElement.textContent = res.likes.length\r\n//         })\r\n//         .catch((err) => console.log(err))\r\n\r\n//     }\r\n// };\r\n\r\n","export const openPopup = (popup) => {\r\n  popup.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closePopupOnEscape);\r\n};\r\n\r\nexport const closePopup = (popup) => {\r\n  popup.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closePopupOnEscape);\r\n};\r\n\r\nexport const closePopupOnEscape = (evt) => {\r\n  const popup = document.querySelector('.popup_is-opened');\r\n\r\n  if (popup && evt.key.toLowerCase() === 'escape') {\r\n    closePopup(popup);\r\n  }\r\n};\r\n\r\nexport const closePopupClickOnOverlay = (evt) => {\r\n  if (evt.target.classList.contains('popup')) {\r\n    closePopup(evt.target);\r\n  }\r\n};\r\n","const showInputError = (formElement, inputElement, errorMessage, config) => {\r\n\r\n    const formError = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.add(config.inputErrorClass);\r\n    formError.textContent = errorMessage\r\n    formError.classList.add(config.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, config) => {\r\n\r\n    const formError = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(config.inputErrorClass);\r\n    formError.classList.remove(config.errorClass);\r\n    formError.textContent = ''\r\n};\r\n\r\nconst isValid = (formElement, inputElement, config) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    }\r\n    else {\r\n        inputElement.setCustomValidity(\"\");\r\n    }\r\n    if (!inputElement.validity.valid) {\r\n        showInputError(formElement, inputElement, inputElement.validationMessage, config);\r\n    } else {\r\n        hideInputError(formElement, inputElement, config);\r\n    }\r\n};\r\n\r\nconst setEventListeners = (formElement, config) => {\r\n\r\n    const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n    const buttonElement = formElement.querySelector(config.submitButtonSelector)\r\n    toggleButtonState(inputList, buttonElement, config)\r\n\r\n    inputList.forEach((inputElement) => {\r\n        inputElement.addEventListener('input', () => {\r\n            isValid(formElement, inputElement, config)\r\n            toggleButtonState(inputList, buttonElement, config)\r\n        });\r\n    });\r\n};\r\n\r\nexport const enableValidation = (config) => {\r\n    const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n    formList.forEach((formElement) => {\r\n        setEventListeners(formElement, config);\r\n    });\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n    return inputList.some((inputElement) => {\r\n        return !inputElement.validity.valid;\r\n    })\r\n};\r\n\r\n\r\n\r\nfunction toggleButtonState(inputList, buttonElement, config) {\r\n\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.disabled = true;\r\n        buttonElement.classList.add(config.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.disabled = false;\r\n        buttonElement.classList.remove(config.inactiveButtonClass);\r\n    }\r\n};\r\n\r\n\r\nexport function clearValidation(formElement, config) {\r\n    const button = formElement.querySelector(config.submitButtonSelector)\r\n    const inputList = Array.from(formElement.querySelectorAll(config.inputSelector))\r\n    inputList.forEach((input) => {\r\n        hideInputError(formElement, input, config)\r\n\r\n    })\r\n    toggleButtonState(inputList, button, config)\r\n\r\n}\r\n\r\n","import '../src/index.css';\r\nimport { createCard, toggleLikeCard, placesCardsList } from './components/cards';\r\nimport { closePopup, closePopupClickOnOverlay, openPopup } from './components/modal';\r\n\r\nimport { clearValidation, enableValidation } from './components/validation';\r\nimport { getCardsFromApi, getUserData, refreshUserData, sendCardToApi, refreshUserAvatar, deleteCardFromApi } from './components/api';\r\n\r\nlet userId = null\r\n\r\n\r\n\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'form__submit_inactive',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'form__input-error_active'\r\n};\r\n\r\n\r\n\r\nconst profileEditPopup = document.querySelector('.popup_type_edit');\r\nconst profileEditButton = document.querySelector('.profile__edit-button');\r\nconst profileEditForm = document.forms['edit-profile'];\r\nconst profileNameInput = profileEditForm.elements.name;\r\nconst profileJobInput = profileEditForm.elements.description;\r\nconst profileName = document.querySelector('.profile__title');\r\nconst profileJob = document.querySelector('.profile__description');\r\nconst profileAvatar = document.querySelector('.profile__image');\r\nconst profileAvatarPopup = document.querySelector('.popup_avatar_changed')\r\n\r\n\r\n\r\nconst profileAvatarEditForm = document.forms['avatar-change']\r\nconst profileAvatarInput = profileAvatarEditForm.elements.avatar\r\n\r\n\r\n\r\nconst addNewCardPopup = document.querySelector('.popup_type_new-card');\r\nconst addNewCardButton = document.querySelector('.profile__add-button');\r\nconst addNewCardForm = document.forms['new-place'];\r\nconst addNewCardInputName = addNewCardForm.elements['place-name'];\r\nconst addNewCardInputImage = addNewCardForm.elements.link;\r\n\r\n\r\n\r\nconst imageViewerPopup = document.querySelector('.popup_type_image');\r\nconst imageInPopup = imageViewerPopup.querySelector('.popup__image');\r\nconst imageNameInPopup = imageViewerPopup.querySelector('.popup__caption');\r\n\r\n\r\n\r\nconst allPopups = document.querySelectorAll('.popup');\r\nconst allPopupCloseButtons = document.querySelectorAll('.popup__close');\r\n\r\n\r\n\r\nconst popupRemove = document.querySelector('.popup_card__remove')\r\nconst cardRemoveForm = document.forms['delete-card']\r\n\r\n\r\n\r\nconst prepareTodeleteCard = (id) => {\r\n  cardRemoveForm.setAttribute('id', id)\r\n  openPopup(popupRemove);\r\n};\r\n\r\n\r\nconst addCardToDOM = (card, method) => {\r\n  const newCard = createCard(card, prepareTodeleteCard, openImageInPopup, toggleLikeCard, userId);\r\n  placesCardsList[method](newCard);\r\n};\r\n\r\n\r\nconst renderUserData = (data) => {\r\n  profileName.textContent = data.name\r\n  profileJob.textContent = data.about\r\n  profileAvatar.style.backgroundImage = `url(${data.avatar})`\r\n}\r\n\r\n\r\nconst addPreloader = (evt) => {\r\n  evt.submitter.textContent = 'Сохранение...'\r\n}\r\n\r\n\r\nconst removePreloader = (evt) => {\r\n  evt.submitter.textContent = 'Сохранить'\r\n}\r\n\r\n\r\nconst handleChangeAvatarFormSubmit = (evt) => {\r\n  evt.preventDefault()\r\n  addPreloader(evt)\r\n  refreshUserAvatar(profileAvatarInput.value)\r\n    .then((res) => {\r\n      profileAvatar.style.backgroundImage = `url(${res.avatar})`\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      removePreloader(evt)\r\n      profileAvatarEditForm.reset()\r\n      clearValidation(profileAvatarEditForm, validationConfig)\r\n      closePopup(profileAvatarPopup)\r\n    })\r\n\r\n}\r\n\r\n\r\nconst handleProfileFormSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  const nameValue = profileNameInput.value;\r\n  const jobValue = profileJobInput.value;\r\n  addPreloader(evt)\r\n  refreshUserData(nameValue, jobValue)\r\n    .then((res) => {\r\n      renderUserData(res)\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      removePreloader(evt)\r\n      clearValidation(profileEditForm, validationConfig)\r\n      profileEditForm.reset()\r\n      closePopup(profileEditPopup);\r\n    })\r\n\r\n}\r\n\r\n\r\nconst handleAddCardFormSubmit = (evt) => {\r\n  evt.preventDefault();\r\n  const cardNameValue = addNewCardInputName.value;\r\n  const cardImageValue = addNewCardInputImage.value;\r\n  const card = {\r\n    name: cardNameValue,\r\n    link: cardImageValue,\r\n  };\r\n  addPreloader(evt)\r\n  sendCardToApi(card)\r\n    .then((card) => {\r\n      addCardToDOM(card, 'prepend')\r\n    })\r\n    .catch((err) => {\r\n      console.log(err)\r\n    })\r\n    .finally(() => {\r\n      removePreloader(evt)\r\n      closePopup(addNewCardPopup);\r\n    })\r\n};\r\n\r\n\r\nconst fillProfileInputs = () => {\r\n  profileNameInput.value = profileName.textContent;\r\n  profileJobInput.value = profileJob.textContent;\r\n};\r\n\r\n\r\nconst openImageInPopup = (evt) => {\r\n  const cardImage = evt.target.closest('.card__image');\r\n  imageInPopup.src = cardImage.src;\r\n  imageInPopup.alt = cardImage.alt;\r\n  imageNameInPopup.textContent = cardImage.alt;\r\n  openPopup(imageViewerPopup);\r\n};\r\n\r\n\r\nallPopupCloseButtons.forEach((closeButton) => {\r\n  closeButton.addEventListener('click', (evt) => {\r\n    const currentOpenPopup = evt.target.closest('.popup');\r\n    closePopup(currentOpenPopup);\r\n  });\r\n});\r\n\r\n\r\nallPopups.forEach((popup) => {\r\n  popup.addEventListener('mousedown', closePopupClickOnOverlay);\r\n});\r\n\r\n\r\nprofileEditButton.addEventListener('click', () => {\r\n  profileEditForm.reset()\r\n  clearValidation(profileEditForm, validationConfig)\r\n  fillProfileInputs();\r\n  openPopup(profileEditPopup);\r\n});\r\n\r\n\r\nprofileAvatar.addEventListener('click', () => {\r\n  profileAvatarEditForm.reset()\r\n  clearValidation(profileAvatarEditForm, validationConfig)\r\n  openPopup(profileAvatarPopup)\r\n})\r\n\r\n\r\naddNewCardButton.addEventListener('click', () => {\r\n  addNewCardForm.reset()\r\n  clearValidation(addNewCardForm, validationConfig)\r\n  openPopup(addNewCardPopup)\r\n\r\n});\r\n\r\ncardRemoveForm.addEventListener('submit', (evt) => {\r\n  evt.preventDefault();\r\n  const cardId = cardRemoveForm.getAttribute('id')\r\n  const cardItem = document.getElementById(cardId)\r\n  evt.submitter.textContent = 'Удаление'\r\n  deleteCardFromApi(cardId)\r\n    .then(() => {\r\n      cardItem.remove()\r\n      closePopup(popupRemove)\r\n\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    })\r\n    .finally(() => {\r\n      evt.submitter.textContent = 'Да'\r\n    })\r\n\r\n});\r\n\r\nprofileEditForm.addEventListener('submit', handleProfileFormSubmit)\r\n\r\naddNewCardForm.addEventListener('submit', handleAddCardFormSubmit)\r\n\r\nprofileAvatarEditForm.addEventListener('submit', handleChangeAvatarFormSubmit)\r\n\r\n\r\nPromise.all([getUserData(), getCardsFromApi()])\r\n  .then(([userData, cards]) => {\r\n    userId = userData._id\r\n    cards.forEach((card) => {\r\n      addCardToDOM(card, 'append')\r\n    })\r\n    renderUserData(userData)\r\n  })\r\n  .catch((err) => {\r\n    console.log(err)\r\n  })\r\n\r\nenableValidation(validationConfig)\r\n\r\nconsole.log(document.cookie)"],"names":["config","baseUrl","headers","authorization","checkResponseStatus","res","ok","json","Promise","reject","concat","status","addLikeOnCard","cardId","fetch","method","then","deleteLikeOnCard","placesCardsList","document","querySelector","toggleLikeCard","evt","cardItem","target","closest","cardLikeButton","cardLikeCount","id","classList","contains","toggle","textContent","likes","length","catch","err","console","log","openPopup","popup","add","addEventListener","closePopupOnEscape","closePopup","remove","removeEventListener","key","toLowerCase","closePopupClickOnOverlay","hideInputError","formElement","inputElement","formError","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","button","submitButtonSelector","Array","from","querySelectorAll","inputSelector","forEach","input","userId","validationConfig","formSelector","profileEditPopup","profileEditButton","profileEditForm","forms","profileNameInput","elements","name","profileJobInput","description","profileName","profileJob","profileAvatar","profileAvatarPopup","profileAvatarEditForm","profileAvatarInput","avatar","addNewCardPopup","addNewCardButton","addNewCardForm","addNewCardInputName","addNewCardInputImage","link","imageViewerPopup","imageInPopup","imageNameInPopup","allPopups","allPopupCloseButtons","popupRemove","cardRemoveForm","prepareTodeleteCard","setAttribute","addCardToDOM","card","newCard","cardDeleteHandler","cardImageHandler","cardLikeHandler","placesCardItem","getElementById","content","cloneNode","cardImage","cardTitle","cardDeleteButton","_id","getAttribute","src","alt","owner","item","createCard","openImageInPopup","renderUserData","data","about","style","backgroundImage","addPreloader","submitter","removePreloader","closeButton","currentOpenPopup","reset","value","preventDefault","deleteCardFromApi","error","finally","job","nameValue","jobValue","body","JSON","stringify","sendCardToApi","url","all","_ref","_ref2","userData","cards","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","enableValidation","cookie"],"sourceRoot":""}